name: build-portable-conda

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          environment-name: pyenv            # must match your intended env name
          init-shell: powershell             # valid value for v2
          generate-run-shell: true           # auto-activate for subsequent steps
          cache-downloads: true
          cache-environment: true

      - name: Show Python & env
        shell: powershell
        run: |
          python -V
          where python
          micromamba info
          micromamba list | Select-String -Pattern "conda-pack" -SimpleMatch -Quiet; if ($LASTEXITCODE -ne 0) { Write-Host "conda-pack not yet installed" }

      - name: Install conda-pack inside env
        shell: powershell
        run: |
          python -m pip install --no-input conda-pack
          python -c "import conda_pack, sys; print('conda-pack version:', conda_pack.__version__)"

      - name: Pack environment to tar.gz (verbose)
        shell: powershell
        run: |
          python -m conda_pack -o pyenv.tar.gz -v
          if (!(Test-Path pyenv.tar.gz)) { Write-Error "pyenv.tar.gz not created" }
          Get-ChildItem -Force

      - name: Prepare bundle (untar, stage app, write launcher)
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          New-Item -ItemType Directory -Force -Path bundle | Out-Null
          New-Item -ItemType Directory -Force -Path bundle\pyenv | Out-Null
          # Use bsdtar/tar (available on Windows runners)
          tar -xzf pyenv.tar.gz -C bundle\pyenv
          if (!(Test-Path bundle\pyenv\python.exe)) {
            # conda-pack usually extracts into ./; python.exe is at root of the extracted tree
            # List tree to debug on failure
            Write-Host "Listing bundle\pyenv after extract:"; Get-ChildItem -Recurse -Depth 2 bundle\pyenv
          }
          New-Item -ItemType Directory -Force -Path bundle\app | Out-Null
          if (Test-Path app) { Copy-Item -Recurse app\* bundle\app\ } else { New-Item -ItemType File -Path bundle\app\main.py -Value 'print("Hello from portable Python!")' | Out-Null }
          $bat = @'
          @echo off
          setlocal
          cd /d %~dp0
          if exist .\pyenv\Scripts\conda-unpack.exe (
            .\pyenv\Scripts\conda-unpack.exe
          )
          .\pyenv\python.exe .\app\main.py
          echo.
          echo Done. Press any key to exit.
          pause >nul
          '@
          Set-Content -Path bundle\RUN_ME.bat -Value $bat -Encoding ascii
          Write-Host "Bundle contents:"; Get-ChildItem -Recurse -Depth 2 bundle

      - name: Zip final bundle
        shell: powershell
        run: |
          Compress-Archive -Path bundle\* -DestinationPath python_portable_win.zip -Force
          Get-Item python_portable_win.zip | Format-List *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python_portable_win
          path: python_portable_win.zip
          if-no-files-found: error

