name: build-portable-conda

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up micromamba (bash)
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          environment-name: pyenv           # must match your env name
          init-shell: bash                  # IMPORTANT: bash, not powershell
          generate-run-shell: true          # auto-activate env in later steps
          cache-downloads: true
          cache-environment: true

      - name: Show Python & env (inside pyenv)
        shell: bash
        run: |
          micromamba run -n pyenv python -V
          micromamba run -n pyenv python -c "import sys; print('sys.prefix:', sys.prefix)"

      - name: Install conda-pack inside env
        shell: bash
        run: |
          micromamba run -n pyenv python -m pip install --no-input conda-pack
          micromamba run -n pyenv python -c "import conda_pack,sys; print('conda_pack', conda_pack.__version__, 'prefix:', sys.prefix)"

      - name: Pack environment to pyenv.tar.gz
        shell: bash
        run: |
          micromamba run -n pyenv python - <<'PY'
          import sys, conda_pack
          print("Packing from prefix:", sys.prefix)
          conda_pack.pack(prefix=sys.prefix, output="pyenv.tar.gz", verbose=True)
          PY
          ls -l
          [ -f pyenv.tar.gz ] || { echo "pyenv.tar.gz not created"; exit 1; }

      - name: Prepare bundle (untar, stage app, write launcher)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p bundle/pyenv
          tar -xzf pyenv.tar.gz -C bundle/pyenv
          mkdir -p bundle/app
          if [ -d app ]; then cp -r app/* bundle/app/ || true; else
            printf '%s\n' 'print("Hello from portable Python!")' > bundle/app/main.py
          fi
          # Write Windows .bat launcher
          cat > bundle/RUN_ME.bat <<'BAT'
          @echo off
          setlocal
          cd /d %~dp0
          if exist .\pyenv\Scripts\conda-unpack.exe (
            .\pyenv\Scripts\conda-unpack.exe
          )
          .\pyenv\python.exe .\app\main.py
          echo.
          echo Done. Press any key to exit.
          pause >nul
          BAT
          echo "Bundle tree:"
          (cd bundle && find . -maxdepth 2 -type f -print)

      - name: Zip final bundle
        shell: bash
        run: |
          # Use PowerShell's Compress-Archive from bash
          powershell -NoLogo -NoProfile -Command \
            "Compress-Archive -Path 'bundle\\*' -DestinationPath 'python_portable_win.zip' -Force"
          ls -l python_portable_win.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python_portable_win
          path: python_portable_win.zip
          if-no-files-found: error

